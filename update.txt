170203

？
乱数が正常に働いていない。最初に生成した種をリプレイで使うと違う乱数列が生成される。
リプレイの内容そのものは再現する。同一の種から同一の乱数列が生成されることは確認できている。
リプレイ時に種をprintすると値の後に改行が出力される。これは何か？

！
数値ではなく文字列で渡していた。
チェックにはid()やtype()を使った。

---
このバグの修正をもってリプレイ機能は実装された。

？
プレイヤーも敵も交差時に白くならない。

!
プレイヤーは変色条件（交差状態の切り替え条件）を移動体からオーバーライド。
インスタンスでなくクラス変数を参照するように。
敵はそもそも交差状態を切り替えていなかった。

170204

---
交差判定をモジュール化。
    これによりグローバル関数をコードの構造から除去。
    グリッド座標から表示座標への変換だけはまだグローバル空間に残してある。
ゲームオーバー時の余計なウェイトを除去。
    ファイル操作のせいかと思ってたけど、ウェイト処理をfor文で囲ってただけだった。
宝石の個数を１つ（固定）に仕様変更。
    敵のターゲットを一意に定まる対象に限定するため。
    つまりプレイヤーも宝石も、画面上には一個しか無いようにすべきである。
    だいいち宝石がいくつかあったとしても面白くはない。

TODO
exe化したいがpy2exeでうまくdllを解決できない。
いっそPyQtに移植するか。
    その場合、まずpythonは3系統になる。これに伴う書き換えも何処かで必要になろう。
    pygameからQt仕様に表示部分を書き換える必要がある。
    Qtでのフレームバッファ（オフスクリーン）描画について調べる。
    スクショ機能は後回しでいい。

---
ゲームとしての形はこれで大体いいと思う。
リプレイ再生周りの仕様をもう少し親切にすべきとは思う。
    ファイラー操作でなく、ゲーム内でリプレイファイルの参照、選択ができるようにしたり。
後はどう固めてどう配付するか。（フレームワークの問題）
どこでどう発表するか。（プレゼンテーションの問題）

---
ゲームオーバー時に果てしなくリプレイファイルがcloseされるのを修正。
    sys.exit()およびself.setUp()の直前にだけ、replay.close()を呼び出すようにした。
タイトル画面を改修
    キー操作の表示とそれに伴う各要素の兼ね合い調整

170205

?
py2exeを使うと"MemoruLoadLibraly failed loading..."を食らってexeが実行できない。
pygame2exeを使うと何も立ち上がらなくてexeが実行できない。
そのあとまたpy2exe使うと一瞬立ち上がる。（サウンドファイルをインクルードしていないせいで終わるだけ）

---
pygame2exeからだとdllが正しくインクルードできるみたい。
その時残ったbuildフォルダを再利用したからpy2exeのビルドがうまく行ったんだと思う。

!
pygameのある場所からdllを探して持ってくる処理が効いた。
ほんとうにmixer.dllが「ない」だけだったみたい。

?
BGMだけ実行ファイルから見つけられない。
外部ファイルにパスが正しくつながっていない。

!
パスの扱いを再調査、整理。
python
    相対パスで外部ファイルを取得できる。（位置関係を保てば他所に動かしても大丈夫。）
    path型とstring型は別物なので、関数でのサポートがないなら変換が必要。
py2exe
    相対パスで外部ファイルを取得できる。（pythonだから上と同じ。）
    data_filesには[("フォルダ名",["ファイル名",*]),*]の形式で情報を与え、ディレクトリを再構成する。
    "ファイル名"の部分は、相対パス表記でいまは動いてる。
exe
    exe自体はバイナリ化されてはいるものの１つのスクリプト。その中にdll所轄以外の処理が書かれている。
    なのでpythonで書いた相対パスとexe内での相対パスは対応する。
    py2exeでもとの階層構造をexe外に再現すればそのまま動く。
これまでのやり方は次の点を誤解していた。
    起動の度にスクリプトの絶対パスを取得し、そこからの相対パスでファイルを取り込まなければいけない。
        誤り。もう少し気の利いた仕様になっている。
    exeファイルに内には階層構造があり、main.pyに相当する部分はそのルートにはない。
    外部ファイルはexe外に置かれるから、外部ファイルはもとからmain.pyの上位階層に置くべきである。
        誤り。実際にはプロジェクトの階層構造はexe外で再現されている。
        main.pyとモジュールで切り分けた部分はexe内にまとめられており、ライブラリや外部ファイルがexe外に置かれる。
これで今までの醜い階層構造がスッキリした。
またファイル名まわりの記述も削れた。

---
もしかして。配付形式のソフトウェアの形態は次のようになっているのではないか。
exeファイル配付
    スクリプトとそれを解釈したり補助したりするdll、それと外部リソース（画像、音声、テキストなど）からなる。
    exeファイルは圧縮されたスクリプトである。
    exeファイルにはスクリプト以外の要素もまとめて圧縮することができるが、役割としての構成要素は上で全部。
appファイル配付
    上と同じ
linuxでの配付
    上と同じだが、exeやappへの圧縮やdll添付が必須だったりえげつなかったりしない。
    動かす時点で足りない、あるいは不整合なライブラリ、スクリプト、dllは自動でインストールされる。
    開発環境と実行環境が自動的におなじになる。
    
170207

---
HP準備。
KOBATOフォントの修正。
exe少し軽量化。

?
exeからopen()が使えない。リプレイ使おうとすると落ちる。
open()ってなければ自動的に作るんじゃないの？
スクショの保存はできる。

! 170208
os.exist()でreplayディレクトリをさがし、なければmkdir()で作成。
この処理を始めに入れればよかった。（open()で自動的にやってくれるのに任せない。）
なおmakedirs()で一気に作成するのはPermission denied食らってうまくいかない。

170208

?
一部状況下で交差判定漏れ。
- 壁際入射時
- 辺の中点に対する45度交差時

! 170210
たぶんFix。プレイヤーの移動とバウンド処理の間にも交差判定を挟んだ。
今までここになかった以上、この部分で漏れた判定は確実にあった。

170209

---
pygame2exe使えるようになった。
ascii:1をコメントアウト。いらなそうなとこだったからいいけど、地味で特定しづらかった。
コードを極力pep8準拠に清書。

170210

---
crosstestモジュールの整理。読めるようになった。

---
敵の設定を整理。
速度を乱数決定ではなく遅い→ふつう→速いの順に出現するようにした。
これに伴い敵に種類別のクラスを設け、関連部分を書き直した。

?
上に二回、以降斜め上方向に入力を続けると、何度かのバウンドの後、枠の外でバウンドを続けるようになる。
下方向に入力することでまた戻ってくるが、仕上がり的に気持ち悪い。


